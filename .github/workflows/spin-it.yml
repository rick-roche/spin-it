name: spin-it

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REPO: rickroche/spin-it
  DOCKER_DEV_TAG: dev-latest
  DOCKER_TAG: latest
  GO_VERSION: '1.16'

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Gitleaks
        uses: zricethezav/gitleaks-action@master

  docker_dev:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:${{ env.DOCKER_DEV_TAG}}
          cache-to: type=inline
          context: .
          file: build/Dockerfile.dev
          push: true
          tags: ${{ env.DOCKER_REPO }}:${{ env.DOCKER_DEV_TAG}}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  docker:
    needs: docker_dev
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG}}
          cache-to: type=inline
          context: .
          file: build/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG}}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
